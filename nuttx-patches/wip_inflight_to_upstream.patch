diff --git NuttX/nuttx/fs/procfs/fs_procfsproc.c NuttX/nuttx/fs/procfs/fs_procfsproc.c
index 84484a5..f5f6c03 100644
--- NuttX/nuttx/fs/procfs/fs_procfsproc.c
+++ NuttX/nuttx/fs/procfs/fs_procfsproc.c
@@ -920,6 +920,7 @@ static ssize_t proc_groupfd(FAR struct proc_file_s *procfile,
 
 #if CONFIG_NFILE_DESCRIPTORS > 0 /* Guaranteed to be true */
   linesize   = snprintf(procfile->line, STATUS_LINELEN, "\n%-3s %-8s %s\n",
+                        "FD", "POS", "OFLAGS");
   copysize   = procfs_memcpy(procfile->line, linesize, buffer, remaining, &offset);
 
   totalsize += copysize;
diff --git  NuttX/nuttx/Makefile.unix  NuttX/nuttx/Makefile.unix
index 96179c4..022c796 100644
--- NuttX/nuttx/Makefile.unix
+++ NuttX/nuttx/Makefile.unix
@@ -507,7 +507,7 @@ gconfig: apps_preconfig
 # that the archiver is 'ar'
 
 export: pass2deps
-	$(Q) $(MKEXPORT) $(MKEXPORT_ARGS) -l "$(EXPORTLIBS)"
+	$(Q) MAKE=${MAKE} $(MKEXPORT) $(MKEXPORT_ARGS) -l "$(EXPORTLIBS)"
 
 # General housekeeping targets:  dependencies, cleaning, etc.
 #
diff --git  NuttX/nuttx/tools/mkexport.sh  NuttX/nuttx/tools/mkexport.sh
index 37a7839..ebaff91 100755
--- NuttX/nuttx/tools/mkexport.sh
+++ NuttX/nuttx/tools/mkexport.sh
@@ -162,7 +162,7 @@ grep -v "WINTOOL[ \t]*=[ \t]y" "${TOPDIR}/Make.defs"  > "${EXPORTDIR}/Make.defs"
 
 # Extract information from the Make.defs file.  A Makefile can do this best
 
-make -C "${TOPDIR}/tools" -f Makefile.export TOPDIR="${TOPDIR}" EXPORTDIR="${EXPORTDIR}"
+${MAKE} -C "${TOPDIR}/tools" -f Makefile.export TOPDIR="${TOPDIR}" EXPORTDIR="${EXPORTDIR}"
 source "${EXPORTDIR}/makeinfo.sh"
 rm -f "${EXPORTDIR}/makeinfo.sh"
 rm -f "${EXPORTDIR}/Make.defs"
@@ -236,7 +236,7 @@ cp -LR -p "${TOPDIR}/include" "${EXPORTDIR}/." || \
 
 # Copy the startup object file(s)
 
-make -C ${ARCHDIR} export_startup TOPDIR=${TOPDIR} EXPORT_DIR="${EXPORTDIR}"
+${MAKE} -C ${ARCHDIR} export_startup TOPDIR=${TOPDIR} EXPORT_DIR="${EXPORTDIR}"
 
 # Copy architecture-specific header files into the arch export sub-directory.
 # This is tricky because each architecture does things in a little different
diff --git NuttX/apps/Makefile NuttX/apps/Makefile
index 76b23ed..6d5462a 100644
--- NuttX/apps/Makefile
+++ NuttX/apps/Makefile
@@ -87,7 +87,7 @@ all: $(BIN)
 
 define SDIR_template
 $(1)_$(2):
-	$(Q) $(MAKE) -C $(1) $(2) TOPDIR="$(TOPDIR)" APPDIR="$(APPDIR)" BIN_DIR="$(BIN_DIR)"
+	+$(Q) $(MAKE) -C $(1) $(2) TOPDIR="$(TOPDIR)" APPDIR="$(APPDIR)" BIN_DIR="$(BIN_DIR)"
 endef
 
 $(foreach SDIR, $(CONFIGURED_APPS), $(eval $(call SDIR_template,$(SDIR),all)))

diff --git NuttX/apps/examples/elf/Makefile NuttX/apps/examples/elf/Makefile
index c813e1e..60b059e 100644
--- NuttX/apps/examples/elf/Makefile
+++ NuttX/apps/examples/elf/Makefile
@@ -98,7 +98,9 @@ really_build: $(OBJS)
 	@touch .built
 
 .built:
+ifeq ($(CONFIG_EXAMPLES_ELF),y)
 	@$(MAKE) -C tests TOPDIR="$(TOPDIR)" APPDIR="$(APPDIR)" CROSSDEV=$(CROSSDEV)
+endif
 	@$(MAKE) TOPDIR="$(TOPDIR)" APPDIR="$(APPDIR)" really_build
 
 ifeq ($(CONFIG_BUILD_KERNEL),y)
@@ -125,7 +127,9 @@ context:
 depend: .depend
 
 clean_tests:
+ifeq ($(CONFIG_EXAMPLES_ELF),y)
 	@$(MAKE) -C tests TOPDIR="$(TOPDIR)" APPDIR="$(APPDIR)" CROSSDEV=$(CROSSDEV) clean
+endif
 
 clean: clean_tests
 	$(call DELFILE, .built)
diff --git NuttX/apps/examples/module/Makefile NuttX/apps/examples/module/Makefile
index f869adf..5c50fb1 100644
--- NuttX/apps/examples/module/Makefile
+++ NuttX/apps/examples/module/Makefile
@@ -104,7 +104,9 @@ really_build: $(OBJS)
 	@touch .built
 
 .built:
+ifeq ($(CONFIG_EXAMPLES_MODULE),y)
 	@$(MAKE) -C drivers TOPDIR="$(TOPDIR)" APPDIR="$(APPDIR)" CROSSDEV=$(CROSSDEV)
+endif
 	@$(MAKE) TOPDIR="$(TOPDIR)" APPDIR="$(APPDIR)" really_build
 
 ifeq ($(CONFIG_BUILD_KERNEL),y)
@@ -138,7 +140,9 @@ endif
 depend: .depend
 
 clean_drivers:
+ifeq ($(CONFIG_EXAMPLES_MODULE),y)
 	@$(MAKE) -C drivers TOPDIR="$(TOPDIR)" APPDIR="$(APPDIR)" CROSSDEV=$(CROSSDEV) clean
+endif
 
 clean: clean_drivers
 	$(call DELFILE, .built)
